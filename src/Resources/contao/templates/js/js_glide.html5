<?php
  // Add the Glide.js Stylesheets
  $GLOBALS['TL_CSS'][] = 'assets/glide/css/glide.core.css';
?>

<script src="assets/glide/js/glide.min.js"></script>
<script>
	// When the page is fully loaded
	$(document).ready(function(){
		// Get all of the '.glide' wrappers on the page then loop through them
		const sliders = document.querySelectorAll('.glide')
		sliders.forEach(item => {
			// get the 'data-config' information from the '.glide' wrapper then split by commas into an array
			c = item.getAttribute('data-config').split(',');
			// turn into boolean
			var configAutoPlay;
			if(c[4] == "false"){configAutoPlay = false;}else{configAutoPlay = c[4];}
			var configPauseOnHover;
			if(c[5] == "false"){configPauseOnHover = false;}else{configPauseOnHover = c[5];}
			var configKeyboard
			if(c[7] == "false"){configKeyboard = false;}else{configKeyboard = c[7];}
			// Mount our gallery using the config values
			const api = new Glide(item, {
				type: c[0],
				startAt: parseInt(c[1]),
				perView: parseInt(c[2]),
				gap: parseInt(c[3]),
				autoplay: configAutoPlay,
				hoverpause: configPauseOnHover,
				animationDuration: parseInt(c[6]),
				keyboard: configKeyboard,
				peek: parseInt(c[8]),
				breakpoints: {
					1350: {
						perView: 2
					},
					950: {
						perView: 1
					}
				}
			}).mount();
			// Fix for slides not going full width on initial load
			// Not sure if still needed, will disable after Bob fixes overflow issues
			if (document.readyState !== 'complete') {
				document.addEventListener('readystatechange', () => {
					if (document.readyState === 'complete') {
						api.update();
					}
				});
			}
		})
	});
</script>
